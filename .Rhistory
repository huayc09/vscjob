library(Seurat)
library(dplyr)
library(mosaic)
library(rlist)
library(purrr)
library(roxygen2)
library(sinew)
ExportBasicLoom <- function(seu, dir = getwd(), file.name = "seu.loom") {
library(Seurat)
library(dplyr)
seu_loom <-
CreateSeuratObject(
counts = GetAssayData(seu, slot = "counts"),
min.cells = 1, min.features = 1) %>%
NormalizeData() %>%
FindVariableFeatures()
lfile <- as.loom(seu_loom,  filename = file.path(dir, file.name))
lfile$close_all()
}
RunScenic <- function(loom.path, spe = "human", project.name = "Scenic_project", dir = getwd(), nCore = 36) {
input <- gsub(" ", "\\ ", normalizePath(loom.path), fixed = T)
sce_wd <- file.path(dir, project.name)
wd <- gsub(" ", "\\ ", sce_wd, fixed = T)
dir.create(sce_wd)
if(!file.exists(loom.path)) stop("loom.path not found")
fileConn <- file(file.path(project.name, "SCENIC_template.sh"))
writeLines(c(
"#!/usr/bin/bash",
"#PBS -l walltime=1:00:00",
"#PBS -l pmem=5gb",
"#PBS -A lp_vsc32982",
paste0("#PBS -l nodes=1:ppn=", nCore),
"#PBS -m ae  # notify on aborted, end",
"#PBS -M yichao.hua@kuleuven.vib.be",
paste0("cd ", wd),
'export PATH="${VSC_DATA}/miniconda3/bin:${PATH}"',
"export NXF_SINGULARITY_CACHEDIR=${VSC_DATA}/singularity_cache/",
"source activate science",
"nextflow run aertslab/SCENICprotocol \\",
"--thr_min_genes 0 \\",
"--thr_min_cells 0 \\",
"--thr_n_genes 999999 \\",
"--thr_pct_mito 1 \\",
paste0("--num_workers ",nCore," \\"),
paste0("--threads ",nCore," \\"),
"-profile singularity \\",
paste0("--loom_input ", input, " \\"),
paste0("--TFs ", sce.database.path[[spe]][["TFs"]], " \\"),
paste0("--motifs ", sce.database.path[[spe]][["motifs"]], " \\"),
paste0("--db ", sce.database.path[[spe]][["db"]])
), fileConn)
close(fileConn)
command <- paste0("cd ", wd, "\nqsub SCENIC_template.sh")
system(command)
}
makeOxygen(ExportBasicLoom)
makeOxygen(RunScenic)
library(vscjob)
roxygenize()
roxygenize()
library(vscjob)
Sys.time()
?Sys.time()
d <- Sys.time()
file = r.r
file = "r.r"
sh.name <- paste(d, "_", file, ".sh")
sh.name
sh.name <- paste0(d, "_", file, ".sh")
sh.name
RunRscript <- function(file, nCore = 36) {
if(!file.exists(file)) stop("R script file path not found")
r.file <- gsub(" ", "\\ ", normalizePath(file), fixed = T)
wd <- gsub(" ", "\\ ", getwd(), fixed = T)
d <- Sys.time()
sh.name <- paste0(d, "_", file, ".sh")
fileConn <- file(sh.name)
writeLines(c(
"#!/usr/bin/bash",
"#PBS -l walltime=1:00:00",
"#PBS -l pmem=5gb",
"#PBS -A lp_vsc32982",
paste0("#PBS -l nodes=1:ppn=", nCore),
"#PBS -m ae  # notify on aborted, end",
"#PBS -M yichao.hua@kuleuven.vib.be",
paste0("cd ", wd),
'export PATH="${VSC_DATA}/miniconda3/bin:${PATH}"',
"source activate general",
paste0("Rscript ", r.file)
), fileConn)
close(fileConn)
command <- paste0("qsub ", gsub(" ", "\\ ", sh.name, fixed = T))
system(command)
}
command <- paste0("qsub ", gsub(" ", "\\ ", sh.name, fixed = T))
command
library(vscjob)
library(Seurat)
library(dplyr)
library(mosaic)
library(rlist)
library(purrr)
library(roxygen2)
library(sinew)
makeOxygen(RunRscript)
roxygenize()
library(vscjob)
print("Hello")
