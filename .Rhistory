library(Seurat)
library(dplyr)
library(mosaic)
library(rlist)
library(purrr)
library(roxygen2)
library(sinew)
ExportBasicLoom <- function(seu, dir = getwd(), file.name = "seu.loom") {
library(Seurat)
library(dplyr)
seu_loom <-
CreateSeuratObject(
counts = GetAssayData(seu, slot = "counts"),
min.cells = 1, min.features = 1) %>%
NormalizeData() %>%
FindVariableFeatures()
lfile <- as.loom(seu_loom,  filename = file.path(dir, file.name))
lfile$close_all()
}
RunScenic <- function(loom.path, spe = "human", project.name = "Scenic_project", dir = getwd(), nCore = 36) {
input <- gsub(" ", "\\ ", normalizePath(loom.path), fixed = T)
sce_wd <- file.path(dir, project.name)
wd <- gsub(" ", "\\ ", sce_wd, fixed = T)
dir.create(sce_wd)
if(!file.exists(loom.path)) stop("loom.path not found")
fileConn <- file(file.path(project.name, "SCENIC_template.sh"))
writeLines(c(
"#!/usr/bin/bash",
"#PBS -l walltime=1:00:00",
"#PBS -l pmem=5gb",
"#PBS -A lp_vsc32982",
paste0("#PBS -l nodes=1:ppn=", nCore),
"#PBS -m ae  # notify on aborted, end",
"#PBS -M yichao.hua@kuleuven.vib.be",
paste0("cd ", wd),
'export PATH="${VSC_DATA}/miniconda3/bin:${PATH}"',
"export NXF_SINGULARITY_CACHEDIR=${VSC_DATA}/singularity_cache/",
"source activate science",
"nextflow run aertslab/SCENICprotocol \\",
"--thr_min_genes 0 \\",
"--thr_min_cells 0 \\",
"--thr_n_genes 999999 \\",
"--thr_pct_mito 1 \\",
paste0("--num_workers ",nCore," \\"),
paste0("--threads ",nCore," \\"),
"-profile singularity \\",
paste0("--loom_input ", input, " \\"),
paste0("--TFs ", sce.database.path[[spe]][["TFs"]], " \\"),
paste0("--motifs ", sce.database.path[[spe]][["motifs"]], " \\"),
paste0("--db ", sce.database.path[[spe]][["db"]])
), fileConn)
close(fileConn)
command <- paste0("cd ", wd, "\nqsub SCENIC_template.sh")
system(command)
}
makeOxygen(ExportBasicLoom)
makeOxygen(RunScenic)
library(vscjob)
roxygenize()
roxygenize()
library(vscjob)
Sys.time()
?Sys.time()
d <- Sys.time()
file = r.r
file = "r.r"
sh.name <- paste(d, "_", file, ".sh")
sh.name
sh.name <- paste0(d, "_", file, ".sh")
sh.name
RunRscript <- function(file, nCore = 36) {
if(!file.exists(file)) stop("R script file path not found")
r.file <- gsub(" ", "\\ ", normalizePath(file), fixed = T)
wd <- gsub(" ", "\\ ", getwd(), fixed = T)
d <- Sys.time()
sh.name <- paste0(d, "_", file, ".sh")
fileConn <- file(sh.name)
writeLines(c(
"#!/usr/bin/bash",
"#PBS -l walltime=1:00:00",
"#PBS -l pmem=5gb",
"#PBS -A lp_vsc32982",
paste0("#PBS -l nodes=1:ppn=", nCore),
"#PBS -m ae  # notify on aborted, end",
"#PBS -M yichao.hua@kuleuven.vib.be",
paste0("cd ", wd),
'export PATH="${VSC_DATA}/miniconda3/bin:${PATH}"',
"source activate general",
paste0("Rscript ", r.file)
), fileConn)
close(fileConn)
command <- paste0("qsub ", gsub(" ", "\\ ", sh.name, fixed = T))
system(command)
}
command <- paste0("qsub ", gsub(" ", "\\ ", sh.name, fixed = T))
command
library(vscjob)
library(Seurat)
library(dplyr)
library(mosaic)
library(rlist)
library(purrr)
library(roxygen2)
library(sinew)
makeOxygen(RunRscript)
roxygenize()
library(vscjob)
print("Hello")
library(vscjob)
library(Seurat)
library(dplyr)
library(mosaic)
library(rlist)
library(purrr)
library(roxygen2)
library(sinew)
options(max.print = 50, spe = "mouse", nCores = 12)
?Sys.Date()
format(Sys.time(), "%a %b %d %X %Y")
library(vscjob)
library(Seurat)
library(vscjob)
list.files("~/")
file.path("~/")
?source()
source("~/.config.r")
file.exists("~/.vscjob.config")
file.create("~/.vscjob.config")
file.create("~/.vscjob.config")
?file.create
vsc.config <- list(
sce.database.path.human.TFs = "${VSC_DATA}/SCENIC/databases/hs_hgnc_tfs.txt",
sce.database.path.human.motifs = "${VSC_DATA}/SCENIC/databases/motifs-v9-nr.hgnc-m0.001-o0.0.tbl",
sce.database.path.human.db = "${VSC_DATA}/SCENIC/databases/hg38__refseq-r80__10kb_up_and_down_tss.mc9nr.feather",
sce.database.path.mouse.TFs = "${VSC_DATA}/SCENIC/databases/mm_mgi_tfs.txt",
sce.database.path.mouse.motifs = "${VSC_DATA}/SCENIC/databases/motifs-v9-nr.mgi-m0.001-o0.0.tbl",
sce.database.path.mouse.db = "${VSC_DATA}/SCENIC/databases/mm9-tss-centered-10kb-7species.mc9nr.feather"
)
data.frame(vsc.config)
as.data.frame(vsc.config)
t(data.frame(vsc.config))
vsc.config <- t(data.frame(vsc.config))
colnames(vsc.config) <- c("par", "value")
vsc.config
write.csv(vsc.config, file = "inst/extdata/vsc.config.template", row.names = T, quote = F, col.names = F)
?col.names
?write.csv
write.csv(vsc.config, file = "inst/extdata/vsc.config.template", row.names = T, quote = F, col.names = NA)
write.csv(vsc.config, file = "inst/extdata/vsc.config.template",
row.names = T, quote = F, col.names = F, sep = "=")
write.csv(vsc.config, file = "inst/extdata/vsc.config.template",
row.names = T, col.names = F, sep = "=", quote = F)
write.csv(vsc.config, file = "inst/extdata/vsc.config.template",
row.names = T, sep = "=", quote = F, col.names = F)
write.table(vsc.config, file = "inst/extdata/vsc.config.template",
row.names = T, sep = "=", quote = F, col.names = F)
library(vscjob)
file.copy(system.file("extdata/", "vsc.config.template", package = "vscjob"),
"~/.vscjob.config")
file.copy(system.file("extdata", "vsc.config.template", package = "vscjob"),
"~/.vscjob.config")
system.file("extdata", "vsc.config.template", package = "vscjob")
system.file("inst/extdata", "vsc.config.template", package = "vscjob")
system.file("inst/extdata/", "vsc.config.template", package = "vscjob")
system.file("extdata/", "vsc.config.template", package = "vscjob")
system.file("extdata", "vsc.config.template", package = "vscjob")
file.copy(from = system.file("extdata", "vsc.config.template", package = "vscjob"),
to = "~/.vscjob.config")
file.copy(from = system.file("extdata", "vsc.config.template", package = "vscjob"),
to = "~/.vscjob.config", overwrite = T)
list.files("~/")
list.files("~/", all.files = T)
cat(file = "~/.vscjob.config")
read.table("~/.vscjob.config")
read.table(from = system.file("extdata", "vsc.config.template", package = "vscjob"))
read.table(system.file("extdata", "vsc.config.template", package = "vscjob"))
read.table("~/.vscjob.config")
?file.copy
write.table(vsc.config, file = "inst/extdata/.vsc.config",
row.names = T, sep = "=", quote = F, col.names = F)
write.table(vsc.config, file = "inst/extdata/.vsc.config",
row.names = T, sep = "=", quote = F, col.names = F)
library(vscjob)
system.file("extdata", ".vsc.config", package = "vscjob")
file.copy(from = system.file("extdata", ".vsc.config", package = "vscjob"),
to = "~/")
file.copy(from = system.file("extdata", ".vsc.config", package = "vscjob"),
to = "~/")
file.copy(from = system.file("extdata", ".vsc.config", package = "vscjob"),
to = "~/", overwrite = TRUE)
write.table(vsc.config, file = "inst/extdata/.vscjob.config",
row.names = T, sep = "=", quote = F, col.names = F)
vscjob_CreateConfig <- function(force = FALSE){
if(file.exists("~/.vscjob.config") & !force) {
stop("Config file already exists.")
}
file.copy(from = system.file("extdata", ".vscjob.config", package = "vscjob"),
to = "~/", overwrite = TRUE)
}
library(vscjob)
library(Seurat)
library(dplyr)
library(mosaic)
library(rlist)
library(purrr)
library(roxygen2)
library(sinew)
makeOxygen(vscjob_CreateConfig)
read.table("~/.vscjob.config")
read.table("~/.vsc.config")
library(vscjob)
vscjob_CreateConfig()
vscjob_CreateConfig(T)
!file.exists("~/.vscjob.config")
vscjob_options <- read.table("~/.vscjob.config", header = F, sep = "=", row.names = 1)
vscjob_options
as.list(t(vscjob_options))
t(vscjob_options)
list(t(vscjob_options))
?as.list
as.list(t(vscjob_options), all.names = T)
?list
seq(nrow(vscjob_options))
seq_along(nrow(vscjob_options))
setNames(
split(vscjob_options, f = seq(nrow(vscjob_options))),
nm = rownames(vscjob_options)
)
setNames(
split(vscjob_options$V2, f = seq(nrow(vscjob_options))),
nm = rownames(vscjob_options)
)
vscjob_options <-
setNames(
split(vscjob_options$V2, f = seq(nrow(vscjob_options))),
nm = rownames(vscjob_options)
)
assign(x = "vscjob_options", value = vscjob_options, envir = globalenv())
makeOxygen(vscjob_LoadConfig)
vscjob_LoadConfig <- function(){
if(!file.exists("~/.vscjob.config")) {
vscjob_CreateConfig()
}
vscjob_options <- read.table("~/.vscjob.config", header = F, sep = "=", row.names = 1)
vscjob_options <-
setNames(
split(vscjob_options$V2, f = seq(nrow(vscjob_options))),
nm = rownames(vscjob_options)
)
assign(x = "vscjob_options", value = vscjob_options, envir = globalenv())
}
makeOxygen(vscjob_LoadConfig)
roxygenize()
roxygenize()
library(vscjob)
vscjob_LoadConfig()
rm(vscjob_options)
vscjob_LoadConfig()
